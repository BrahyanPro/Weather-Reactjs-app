{"version":3,"sources":["services/converters.js","components/MainCard.jsx","components/ContentBox.jsx","components/Header.jsx","services/helpers.js","components/DateAndTime.jsx","components/Search.jsx","components/MetricsCard.jsx","components/MetricsBox.jsx","components/UnitSwitch.jsx","components/LoadingScreen.jsx","components/ErrorScreen.jsx","ClimaApp.jsx","index.js"],"names":["ctoF","c","unixToLocalTime","unixSeconds","timezone","time","Date","toISOString","match","startsWith","substring","MainCard","city","country","description","iconName","unitSystem","weatherData","className","width","height","src","alt","Math","round","main","temp","feels_like","ContentBox","children","Header","getWindSpeed","windInMps","toFixed","getVisibility","visibilityInMeters","getTime","currentTime","split","hours","minutes","timeTo12HourFormat","getAMPM","getWeekDay","dt","getUTCDay","DateAndTime","Search","placeHolder","value","onFocus","onChange","onKeyDown","type","placeholder","MetricsCard","title","iconSrc","metric","unit","MetricsBox","num","humidity","wind","speed","deg","visibility","sys","sunrise","sunset","UnitSwitch","onClick","LoadingScreen","loadingMessage","ErrorScreen","errorMessage","ClimaApp","useState","cityInput","setCityInput","triggerFetch","setTriggerFetch","setWeatherData","setUnitSystem","ciudad","setciudad","url","process","useEffect","a","axios","get","res","data","getData","message","name","weather","icon","e","target","keyCode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f9c7085.chunk.js","sourcesContent":["export const ctoF = (c) => (c * 9) / 5 + 32;\n\nexport const mpsToMph = (mps) => (mps * 2.236936).toFixed(2);\n\nexport const kmToMiles = (km) => (km / 1.609).toFixed(1);\n\nexport const timeTo12HourFormat = (time) => {\n    let [hours, minutes] = time.split(\":\");\n    // eslint-disable-next-line no-cond-assign\n    return `${(hours %= 12) ? hours : 12}:${minutes}`;\n};\n\nexport const degToCompass = (num) => {\n    var val = Math.round(num / 22.5);\n    var arr = [\n        \"N\",\n        \"NNE\",\n        \"NE\",\n        \"ENE\",\n        \"E\",\n        \"ESE\",\n        \"SE\",\n        \"SSE\",\n        \"S\",\n        \"SSW\",\n        \"SW\",\n        \"WSW\",\n        \"W\",\n        \"WNW\",\n        \"NW\",\n        \"NNW\",\n    ];\n    return arr[val % 16];\n};\n\nexport const unixToLocalTime = (unixSeconds, timezone) => {\n    let time = new Date((unixSeconds + timezone) * 1000)\n        .toISOString()\n        .match(/(\\d{2}:\\d{2})/)[0];\n\n    return time.startsWith(\"0\") ? time.substring(1) : time;\n};","import React from \"react\";\nimport { ctoF } from \"../services/converters\";\nimport \"./MainCard.css\";\n\nexport const MainCard = ({\n  city,\n  country,\n  description,\n  iconName,\n  unitSystem,\n  weatherData,\n}) => {\n  return (\n    <div className=\"wrapper_main\">\n      <h1 className=\"location\">\n        {city}, {country}\n        <span className=\"mini-credit\">Creado por Brahyan Pro</span>\n      </h1>\n      <p className=\"description\">{description}</p>\n      <img\n        width=\"150px\"\n        height=\"150px\"\n        src={`/icons/${iconName}.svg`}\n        alt=\"weatherIcon\"\n      />\n      <h1 className=\"temperature\">\n        {unitSystem === \"metric\"\n          ? Math.round(weatherData.main.temp)\n          : Math.round(ctoF(weatherData.main.temp))}\n        °{unitSystem === \"metric\" ? \"C\" : \"F\"}\n      </h1>\n      <p>\n        Feels like{\" \"}\n        {unitSystem === \"metric\"\n          ? Math.round(weatherData.main.feels_like)\n          : Math.round(ctoF(weatherData.main.feels_like))}\n        °{unitSystem === \"metric\" ? \"C\" : \"F\"}\n      </p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./ContentBox.css\";\n\nexport const ContentBox = ({ children }) => {\n  return <div className=\"wrapper_box\">{children}</div>;\n};\n","import React from \"react\";\nimport \"./Header.css\";\n\nexport const Header = ({ children }) => {\n  return <div className=\"wrapper_header\">{children}</div>;\n};\n","import {\n    unixToLocalTime,\n    kmToMiles,\n    mpsToMph,\n    timeTo12HourFormat,\n} from \"./converters\";\n\nexport const getWindSpeed = (unitSystem, windInMps) =>\n    unitSystem === \"metric\" ? windInMps : mpsToMph(windInMps);\n\nexport const getVisibility = (unitSystem, visibilityInMeters) =>\n    unitSystem === \"metric\" ?\n    (visibilityInMeters / 1000).toFixed(1) :\n    kmToMiles(visibilityInMeters / 1000);\n\nexport const getTime = (unitSystem, currentTime, timezone) =>\n    unitSystem === \"metric\" ?\n    unixToLocalTime(currentTime, timezone) :\n    timeTo12HourFormat(unixToLocalTime(currentTime, timezone));\n\nexport const getAMPM = (unitSystem, currentTime, timezone) =>\n    unitSystem === \"imperial\" ?\n    unixToLocalTime(currentTime, timezone).split(\":\")[0] >= 12 ?\n    \"PM\" :\n    \"AM\" :\n    \"\";\n\nexport const getWeekDay = (weatherData) => {\n    const weekday = [\n        \"Sunday\",\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n        \"Friday\",\n        \"Saturday\",\n    ];\n    return weekday[\n        new Date((weatherData.dt + weatherData.timezone) * 1000).getUTCDay()\n    ];\n};","import React from \"react\";\nimport { getWeekDay, getTime, getAMPM } from \"../services/helpers\";\nimport \"./DateAndTime.css\";\n\nexport const DateAndTime = ({ weatherData, unitSystem }) => {\n  return (\n    <div className=\"wrapper_date\">\n      <h2>\n        {`${getWeekDay(weatherData)}, ${getTime(\n          unitSystem,\n          weatherData.dt,\n          weatherData.timezone\n        )} ${getAMPM(unitSystem, weatherData.dt, weatherData.timezone)}`}\n      </h2>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./Search.css\";\n\nexport const Search = ({\n  placeHolder,\n  value,\n  onFocus,\n  onChange,\n  onKeyDown,\n}) => {\n  return (\n    <input\n      className=\"search\"\n      type=\"text\"\n      placeholder={placeHolder}\n      value={value}\n      onFocus={onFocus}\n      onChange={onChange}\n      onKeyDown={onKeyDown}\n    />\n  );\n};\n","import React from \"react\";\n\nimport \"./MetricsCard.css\";\n\nexport const MetricsCard = ({ title, iconSrc, metric, unit }) => {\n  return (\n    <div className=\"wrapper_Mcard\">\n      <p>{title}</p>\n      <div className=\"content\">\n        <img width=\"100px\" height=\"100px\" src={iconSrc} alt=\"weatherIcon\" />\n        <div>\n          <h1>{metric}</h1>\n          <p>{unit}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { degToCompass } from \"../services/converters\";\nimport {\n  getTime,\n  getAMPM,\n  getVisibility,\n  getWindSpeed,\n} from \"../services/helpers\";\nimport { MetricsCard } from \"./MetricsCard\";\nimport \"./MetricsBox.css\";\n\nexport const MetricsBox = ({ weatherData, unitSystem }) => {\n  return (\n    <div className=\"wrapper_metric\">\n      <MetricsCard\n        title={\"Humidity\"}\n        iconSrc={\"/icons/humidity.png\"}\n        metric={weatherData.main.humidity}\n        unit={\"%\"}\n      />\n      <MetricsCard\n        title={\"Wind speed\"}\n        iconSrc={\"/icons/wind.png\"}\n        metric={getWindSpeed(unitSystem, weatherData.wind.speed)}\n        unit={unitSystem === \"metric\" ? \"m/s\" : \"m/h\"}\n      />\n      <MetricsCard\n        title={\"Wind direction\"}\n        iconSrc={\"/icons/compass.png\"}\n        metric={degToCompass(weatherData.wind.deg)}\n      />\n      <MetricsCard\n        title={\"Visibility\"}\n        iconSrc={\"/icons/binocular.png\"}\n        metric={getVisibility(unitSystem, weatherData.visibility)}\n        unit={unitSystem === \"metric\" ? \"km\" : \"miles\"}\n      />\n      <MetricsCard\n        title={\"Sunrise\"}\n        iconSrc={\"/icons/sunrise.png\"}\n        metric={getTime(\n          unitSystem,\n          weatherData.sys.sunrise,\n          weatherData.timezone\n        )}\n        unit={getAMPM(\n          unitSystem,\n          weatherData.sys.sunrise,\n          weatherData.timezone\n        )}\n      />\n      <MetricsCard\n        title={\"Sunset\"}\n        iconSrc={\"/icons/sunset.png\"}\n        metric={getTime(\n          unitSystem,\n          weatherData.sys.sunset,\n          weatherData.timezone\n        )}\n        unit={getAMPM(unitSystem, weatherData.sys.sunset, weatherData.timezone)}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport \"./UnitSwitch.css\";\n\nexport const UnitSwitch = ({ onClick, unitSystem }) => {\n  return (\n    <div className=\"wrapper_switch\">\n      <p\n        className={`${\"switch\"} ${\n          unitSystem === \"metric\" ? \"active\" : \"inactive\"\n        }`}\n        onClick={onClick}\n      >\n        Metric System\n      </p>\n      <p\n        className={`${\"switch\"} ${\n          unitSystem === \"metric\" ? \"inactive\" : \"active\"\n        }`}\n        onClick={onClick}\n      >\n        Imperial System\n      </p>\n    </div>\n  );\n};\n","import React from \"react\";\nexport const LoadingScreen = ({ loadingMessage }) => <h1>{loadingMessage}</h1>;\n","import React from \"react\";\nimport \"./ErrorScreen.css\";\n\nexport const ErrorScreen = ({ errorMessage, children }) => {\n  return (\n    <div className=\"wrapper_error\">\n      <h1 className=\"message\">{errorMessage}</h1>\n      {children}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport { MainCard } from \"./components/MainCard\";\nimport { ContentBox } from \"./components/ContentBox\";\nimport { Header } from \"./components/Header\";\nimport { DateAndTime } from \"./components/DateAndTime\";\nimport { Search } from \"./components/Search\";\nimport { MetricsBox } from \"./components/MetricsBox\";\nimport { UnitSwitch } from \"./components/UnitSwitch\";\nimport { LoadingScreen } from \"./components/LoadingScreen\";\nimport { ErrorScreen } from \"./components/ErrorScreen\";\n\nimport \"./styles/Home.css\";\nimport axios from \"axios\";\n\nconst ClimaApp = () => {\n  const [cityInput, setCityInput] = useState(\"New York\");\n  const [triggerFetch, setTriggerFetch] = useState(true);\n  const [weatherData, setWeatherData] = useState();\n  const [unitSystem, setUnitSystem] = useState(\"metric\");\n  const [ciudad, setciudad] = useState(cityInput);\n\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad}&units=metric&appid=${process.env.REACT_APP_OPENWEATHER_API_KEY}`;\n\n  useEffect(() => {\n    const getData = async () => {\n      const res = await axios.get(url);\n      const { data } = res;\n      setWeatherData({ ...data });\n      setCityInput(\"\");\n    };\n    getData();\n  }, [triggerFetch, url]);\n\n  const changeSystem = () =>\n    unitSystem === \"metric\"\n      ? setUnitSystem(\"imperial\")\n      : setUnitSystem(\"metric\");\n\n  return weatherData && !weatherData.message ? (\n    <div className=\"wrapper_home\">\n      <MainCard\n        city={weatherData.name}\n        country={weatherData.sys.country}\n        description={weatherData.weather[0].description}\n        iconName={weatherData.weather[0].icon}\n        unitSystem={unitSystem}\n        weatherData={weatherData}\n      />\n      <ContentBox>\n        <Header>\n          <DateAndTime weatherData={weatherData} unitSystem={unitSystem} />\n          <Search\n            placeHolder=\"Search a city...\"\n            value={cityInput}\n            onFocus={(e) => {\n              e.target.value = \"\";\n              e.target.placeholder = \"\";\n            }}\n            onChange={(e) => setCityInput(e.target.value)}\n            onKeyDown={(e) => {\n              e.keyCode === 13 && setTriggerFetch(!triggerFetch);\n              e.keyCode === 13 && setciudad(cityInput);\n              e.target.placeholder = \"Search a city...\";\n            }}\n          />\n        </Header>\n        <MetricsBox weatherData={weatherData} unitSystem={unitSystem} />\n        <UnitSwitch onClick={changeSystem} unitSystem={unitSystem} />\n      </ContentBox>\n    </div>\n  ) : weatherData && weatherData.message ? (\n    <ErrorScreen errorMessage=\"City not found, try again!\">\n      <Search\n        onFocus={(e) => (e.target.value = \"\")}\n        onChange={(e) => setCityInput(e.target.value)}\n        onKeyDown={(e) => e.keyCode === 13 && setTriggerFetch(!triggerFetch)}\n      />\n    </ErrorScreen>\n  ) : (\n    <LoadingScreen loadingMessage=\"Loading data...\" />\n  );\n};\n\nexport default ClimaApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ClimaApp from \"./ClimaApp\";\nimport \"./styles/globals.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ClimaApp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}